# 1. Базовый класс Animal
class Animal:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    def make_sound(self):
        pass
    def eat(self):
        return f"{self.name} is eating."
# 2. Подклассы Bird, Mammal и Reptile
class Bird(Animal):
    def make_sound(self):
        return f"{self.name} says: Tweet!"
class Mammal(Animal):
    def make_sound(self):
        return f"{self.name} says: Rrr!"
class Reptile(Animal):
    def make_sound(self):
        return f"{self.name} says: Hiss!"
# 3. Полиморфизм
def animal_sound(animals):
    for animal in animals:
        print(animal.make_sound())

# 4. Класс Zoo
class Zoo:
    def __init__(self):
        self.animals = []
        self.employees = []

    def add_animal(self, animal):
        self.animals.append(animal)
        print(f"Животное {animal} добавлено в зоопарк")
    def add_employee(self, employee):
        self.employees.append(employee)
# 5. Классы для сотрудников
class ZooKeeper:
    def __init__(self, name):
        self.name = name
    def feed_animal(self, animal):
        print(f"{self.name} кормит {animal.name}.")
class Veterinar:
    def __init__(self, name):
        self.name = name
    def heal_animal(self, animal):
        print(f"{self.name} лечит {animal.name}.")
 # Пример использования
if __name__ == "__main__":
    # Создаем животных
    bird1 = Bird("Polly", 2)
    mammal1 = Mammal("Leo", 5)
    snake = Reptile("Sly", 3)

    # Полиморфизм
    animal_sound([bird1, mammal1, snake])

    # Создаем зоопарк
    zoo = Zoo()
    zoo.add_animal(bird1)
    zoo.add_animal(mammal1)
    zoo.add_animal(snake)

    # Создаем сотрудников
    zookeeper = ZooKeeper("Petr")
    veterinar = Veterinar("Stas")

 # Примеры действий сотрудников
    print(zookeeper.feed_animal(bird1))
    print(veterinar.heal_animal(mammal1))

    # Примеры как говорят животные
    animal_sound(zoo.animals)

    # Примеры на действия сотрудников
    zookeeper.feed_animal(mammal1)
